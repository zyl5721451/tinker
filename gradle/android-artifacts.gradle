apply plugin: 'maven-publish'//为什么要用maven-publish?
apply plugin: 'com.github.dcendents.android-maven'//maven?

android {//统一jdk版本
    compileOptions {
        sourceCompatibility rootProject.ext.javaVersion
        targetCompatibility rootProject.ext.javaVersion
    }
}
version = version
group = GROUP

install {
    repositories.mavenInstaller {//产生pom
        // This generates POM.xml with proper parameters
        pom.project {
            name POM_NAME
            artifactId POM_ARTIFACT_ID
            packaging POM_PACKAGING
            description POM_DESCRIPTION
            url POM_URL//项目主页

            scm {
                url POM_SCM_URL//git主页
            }

            licenses {//版权信息
                license {
                    name POM_LICENCE_NAME
                    url POM_LICENCE_URL
                    Distribution POM_LICENCE_DIST
                }
            }

            developers {//开发者信息
                developer {
                    id POM_DEVELOPER_ID
                    name POM_DEVELOPER_NAME
                }
            }
        }
    }
}


task androidJavadocs(type: Javadoc) {
    source = android.sourceSets.main.java.srcDirs
    ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
    classpath += files(ext.androidJar)
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}

artifacts {
    archives androidSourcesJar//source
    archives androidJavadocsJar//javaDoc
}


//for local maven test
afterEvaluate { project ->
    tasks.all { Task task ->
        if (task.name.equalsIgnoreCase('publishTinkerPatchPublicationToMavenLocal')) {
            task.dependsOn tasks.getByName('assemble')
        }
    }
}

publishing {
    publications {
        TinkerPatch(MavenPublication) {
            groupId = group
            artifactId = project.getName()
            version = version
            // Tell maven to prepare the generated "*.aar" file for publishing
            artifact("$buildDir/outputs/aar/${project.getName()}-release.aar")
            artifact androidJavadocsJar
        }
    }
}

task buildAndPublishLocalMaven(dependsOn: ['build', 'publishTinkerPatchPublicationToMavenLocal']) {}
//depend checkstyle
project.tasks.getByName("check").dependsOn tasks.getByName("checkstyle")
